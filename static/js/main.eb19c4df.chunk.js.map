{"version":3,"sources":["theme/themeNight.jpg","theme/themeLion.jpg","theme/themeSummer.jpg","theme/themeUnicorn.gif","theme/themeBear.gif","constants.tsx","utils.tsx","theme/context.tsx","components/Puzzle.tsx","components/ChooseTheme.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CORRECT_ARR","LEFT_COLUMNS_ARR","RIGHT_COLUMNS_ARR","BG_POSITIONS","DEFAULT_THEME_FROM_LOCALSTORAGE","localStorage","getItem","THEMES","bear","id","background","type","value","themeBear","mainColor","secondaryColor","night","themeNight","lion","themeLion","summer","themeSummer","unicorn","themeUnicorn","unstyled","compareArr","arr1","arr2","length","i","cloneArr","board","slice","shuffleArr","arr","temp","j","Math","floor","random","getTheme","ThemeContext","React","createContext","Puzzle","theme","useContext","_useState","useState","_useState2","Object","slicedToArray","setBoard","_useState3","_useState4","finish","setFinish","_useState5","_useState6","moves","setMoves","react_default","a","createElement","Fragment","className","map","item","isEmpty","classNameEmpty","classNameStatus","classNameFinished","styles","backrgoundColor","color","objectSpread","backgroundImage","concat","backgroundPosition","style","disabled","onClick","currentPos","newBoard","sides","emptyPos","find","side","getEmptyPosition","columnBelow","pos","getColumnBelowPosition","columnAbove","getColumnAbovePosition","splice","handleUpdateBoard","key","backgroundColor","handleRestart","ButtonThemes","_ref","onChangeTheme","active","setActive","buttons","keys","setItem","ChooseTheme","_ref2","handleChangeTheme","themeId","ChooseTheme_ButtonThemes","App","setThemeId","Provider","components_ChooseTheme","components_Puzzle","href","target","rel","title","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb19c4df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/themeNight.4105ef69.jpg\";","module.exports = __webpack_public_path__ + \"static/media/themeLion.0c5e6eed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/themeSummer.b66d4ee4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/themeUnicorn.172e4585.gif\";","module.exports = __webpack_public_path__ + \"static/media/themeBear.2c8c58b6.gif\";","import themeNight from './theme/themeNight.jpg';\nimport themeLion from './theme/themeLion.jpg';\nimport themeSummer from './theme/themeSummer.jpg';\nimport themeUnicorn from './theme/themeUnicorn.gif';\nimport themeBear from './theme/themeBear.gif';\n\ntype Background = {\n\ttype: string;\n\tvalue: string;\n};\n\ntype Theme = {\n\tid: string;\n\tbackground: Background;\n\tmainColor: string;\n\tsecondaryColor: string;\n};\n\ntype Themes = {\n\tnight: Theme;\n\tlion: Theme;\n\tsummer: Theme;\n\tunicorn: Theme;\n\t[key: string]: Theme;\n};\n\nexport const CORRECT_ARR = [\n\t1,\n\t2,\n\t3,\n\t4,\n\t5,\n\t6,\n\t7,\n\t8,\n\t9,\n\t10,\n\t11,\n\t12,\n\t13,\n\t14,\n\t15,\n\t-1\n];\n\nexport const LEFT_COLUMNS_ARR = [0, 4, 8, 12];\n\nexport const RIGHT_COLUMNS_ARR = [3, 7, 11, 15];\n\n//TODO - Automate these positions\nexport const BG_POSITIONS = [\n\t//column 1\n\t'0 0',\n\t'-87.5px 0',\n\t'-175px 0',\n\t'-262.5px 0',\n\t//column 2\n\t'0 -87.5px',\n\t'-87.5px -87.5px',\n\t'-175px -87.5px',\n\t'-262.5px -87.5px',\n\t//column 3\n\t'0 -175px',\n\t'-87.5px -175px',\n\t'-175px -175px',\n\t'-262.5px -175px',\n\t//column 4\n\t'0 -262.5px',\n\t'-87.5px -262.5px',\n\t'-175px -262.5px',\n\t'-262.5px -262.5px'\n];\n\nexport const DEFAULT_THEME = 'summer';\n\nexport const DEFAULT_THEME_FROM_LOCALSTORAGE = localStorage.getItem(\n\t'DEFAULT_THEME'\n);\n\nexport const THEMES: Themes = {\n\tbear: {\n\t\tid: 'bear',\n\t\tbackground: {\n\t\t\ttype: 'image',\n\t\t\tvalue: themeBear\n\t\t},\n\t\tmainColor: '#333',\n\t\tsecondaryColor: '#B7EE4A'\n\t},\n\tnight: {\n\t\tid: 'night',\n\t\tbackground: {\n\t\t\ttype: 'image',\n\t\t\tvalue: themeNight\n\t\t},\n\t\tmainColor: '#FFF',\n\t\tsecondaryColor: '#2B0E4A'\n\t},\n\tlion: {\n\t\tid: 'lion',\n\t\tbackground: {\n\t\t\ttype: 'image',\n\t\t\tvalue: themeLion\n\t\t},\n\t\tmainColor: '#230A00',\n\t\tsecondaryColor: '#FCF175'\n\t},\n\tsummer: {\n\t\tid: 'summer',\n\t\tbackground: {\n\t\t\ttype: 'image',\n\t\t\tvalue: themeSummer\n\t\t},\n\t\tmainColor: '#463047',\n\t\tsecondaryColor: '#ADE1BB'\n\t},\n\tunicorn: {\n\t\tid: 'unicorn',\n\t\tbackground: {\n\t\t\ttype: 'image',\n\t\t\tvalue: themeUnicorn\n\t\t},\n\t\tmainColor: '#342f86',\n\t\tsecondaryColor: '#BDD6FF'\n\t},\n\tunstyled: {\n\t\tid: 'unstyled',\n\t\tbackground: {\n\t\t\ttype: 'color',\n\t\t\tvalue: '#2196F3'\n\t\t},\n\t\tmainColor: '#FFF',\n\t\tsecondaryColor: '#2196F3'\n\t}\n};\n","import {THEMES} from './constants';\n\ntype GetTheme = (id: string) => any;\n\ntype CompareArr = (arr1: Array<number>, arr2: Array<number>) => boolean;\n\ntype GetColumnPosition = (arr: Array<number>, i: number) => any;\n\ntype GetSides = (i: number) => Array<number>;\n\ntype CloneArr = (board: Array<number>) => Array<number>;\n\ntype GetEmptyPosition = (arr: Array<number>, sides: Array<number>) => any;\n\ntype ShuffleArr = (arr: Array<number>) => Array<number>;\n\nexport const compareArr: CompareArr = (arr1, arr2) => {\n\tif (arr1.length !== arr2.length) return false;\n\n\tfor (let i = 0; i < arr1.length; i++) {\n\t\tif (arr1[i] !== arr2[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport const getColumnBelowPosition: GetColumnPosition = (arr, i) =>\n\tarr.find(pos => pos === i + 1);\n\nexport const getColumnAbovePosition: GetColumnPosition = (arr, i) =>\n\tarr.find(pos => pos === i - 1);\n\nexport const getSides: GetSides = i => [i - 4, i + 1, i + 4, i - 1];\n\nexport const cloneArr: CloneArr = board => board.slice(0);\n\nexport const getEmptyPosition: GetEmptyPosition = (arr, sides) =>\n\tsides.find(side => arr[side] === -1);\n\nexport const shuffleArr: ShuffleArr = arr => {\n\tlet i = arr.length;\n\tlet j = 0;\n\tlet temp;\n\n\twhile (i--) {\n\t\tj = Math.floor(Math.random() * (i + 1));\n\t\ttemp = arr[i];\n\t\tarr[i] = arr[j];\n\t\tarr[j] = temp;\n\t}\n\n\treturn arr;\n};\n\nexport const getTheme: GetTheme = id => THEMES[id];\n","import React from 'react';\nimport {getTheme} from '../utils';\n\nexport const ThemeContext = React.createContext(getTheme('unicorn'));\n","import React, {useState, useContext} from 'react';\nimport {\n\tshuffleArr,\n\tcompareArr,\n\tcloneArr,\n\tgetSides,\n\tgetEmptyPosition,\n\tgetColumnBelowPosition,\n\tgetColumnAbovePosition\n} from '../utils';\nimport {\n\tCORRECT_ARR,\n\tLEFT_COLUMNS_ARR,\n\tRIGHT_COLUMNS_ARR,\n\tBG_POSITIONS\n} from '../constants';\nimport {ThemeContext} from '../theme/context';\nimport './style.css';\n\nconst Puzzle: React.FC<React.HTMLAttributes<HTMLElement>> = () => {\n\tconst theme = useContext(ThemeContext);\n\n\tconst [board, setBoard] = useState(shuffleArr(cloneArr(CORRECT_ARR)));\n\tconst [finish, setFinish] = useState(compareArr(board, CORRECT_ARR));\n\n\tlet [moves, setMoves] = useState(0);\n\n\tconst handleRestart = () => {\n\t\tconst newBoard = shuffleArr(cloneArr(CORRECT_ARR));\n\n\t\t//set new board\n\t\tsetBoard(newBoard);\n\n\t\t//set moves to zero\n\t\tsetMoves(0);\n\n\t\t//set finish to false\n\t\tsetFinish(false);\n\t};\n\n\tconst handleUpdateBoard = (currentPos: number, item: number) => {\n\t\t//clone board\n\t\tconst newBoard = cloneArr(board);\n\n\t\t//sides [top, right, bottom, left]\n\t\tconst sides = getSides(currentPos);\n\n\t\t//find empty position\n\t\tconst emptyPos = getEmptyPosition(board, sides);\n\n\t\t//search if the next item is in the column below\n\t\tconst columnBelow = getColumnBelowPosition(\n\t\t\tLEFT_COLUMNS_ARR,\n\t\t\tcurrentPos\n\t\t);\n\n\t\t//search if the next item is in the column above\n\t\tconst columnAbove = getColumnAbovePosition(\n\t\t\tRIGHT_COLUMNS_ARR,\n\t\t\tcurrentPos\n\t\t);\n\n\t\tif (\n\t\t\tboard[emptyPos] === -1 &&\n\t\t\tboard[columnBelow] !== -1 &&\n\t\t\tboard[columnAbove] !== -1\n\t\t) {\n\t\t\tnewBoard.splice(emptyPos, 1, item);\n\t\t\tnewBoard.splice(currentPos, 1, -1);\n\n\t\t\t//set one more click\n\t\t\tsetMoves(moves + 1);\n\t\t}\n\n\t\t//set new board\n\t\tsetBoard(newBoard);\n\n\t\t//set finish if arrays are equals\n\t\tsetFinish(compareArr(newBoard, CORRECT_ARR));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className='board'>\n\t\t\t\t{board.map((item: number, i: number) => {\n\t\t\t\t\tconst isEmpty = item === -1;\n\t\t\t\t\tconst classNameEmpty = isEmpty ? 'empty' : '';\n\t\t\t\t\tconst classNameStatus =\n\t\t\t\t\t\titem === i + 1 ? 'correct' : 'error';\n\t\t\t\t\tconst classNameFinished = finish ? 'finished' : 'styled';\n\n\t\t\t\t\tlet styles: any = {};\n\n\t\t\t\t\tif (!isEmpty) {\n\t\t\t\t\t\tstyles = {\n\t\t\t\t\t\t\tbackrgoundColor: theme.background.value,\n\t\t\t\t\t\t\tcolor: theme.mainColor\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (theme.background.type === 'image') {\n\t\t\t\t\t\t\tstyles = {\n\t\t\t\t\t\t\t\t...styles,\n\t\t\t\t\t\t\t\tbackgroundImage: `url(${theme.background.value})`,\n\t\t\t\t\t\t\t\tbackgroundPosition: BG_POSITIONS[item - 1]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={styles}\n\t\t\t\t\t\t\tclassName={`button ${classNameFinished} ${classNameStatus} ${classNameEmpty}`}\n\t\t\t\t\t\t\tdisabled={isEmpty}\n\t\t\t\t\t\t\tonClick={() => handleUpdateBoard(i, item)}\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{isEmpty || finish ? '' : item}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\n\t\t\t<div className='status'>\n\t\t\t\t<div>Moves {moves}</div>\n\n\t\t\t\t{finish && (\n\t\t\t\t\t<div className='finish'>\n\t\t\t\t\t\t<div>Done!</div>\n\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: theme.secondaryColor,\n\t\t\t\t\t\t\t\tcolor: theme.mainColor\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName='button styled'\n\t\t\t\t\t\t\tonClick={() => handleRestart()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRestart\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Puzzle;\n","import React, {useState} from 'react';\nimport {\n\tTHEMES,\n\tDEFAULT_THEME,\n\tDEFAULT_THEME_FROM_LOCALSTORAGE\n} from '../constants';\n\ninterface ChooseThemeIProps extends React.HTMLAttributes<HTMLElement> {\n\tonChangeTheme: (theme: string) => void;\n}\n\ninterface ButtonThemesIProps extends React.HTMLAttributes<HTMLElement> {\n\tonChangeTheme: (theme: string) => void;\n}\n\nconst ButtonThemes: React.FC<ButtonThemesIProps> = ({onChangeTheme}) => {\n\tconst [active, setActive] = useState(\n\t\tDEFAULT_THEME_FROM_LOCALSTORAGE || DEFAULT_THEME\n\t);\n\n\tconst handleClick = (id: string) => {\n\t\tlocalStorage.setItem('DEFAULT_THEME', id);\n\n\t\tsetActive(id);\n\n\t\tonChangeTheme && onChangeTheme(id);\n\t};\n\n\tlet buttons = Object.keys(THEMES).map(key => {\n\t\tconst theme = THEMES[key];\n\t\tlet style: any = {\n\t\t\tbackgroundColor: theme.background.value,\n\t\t\tcolor: theme.mainColor\n\t\t};\n\n\t\tif (theme.background.type === 'image') {\n\t\t\tstyle = {\n\t\t\t\t...style,\n\t\t\t\tbackgroundImage: `url(${theme.background.value})`\n\t\t\t};\n\t\t}\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\tstyle={style}\n\t\t\t\tclassName={`button button-theme styled ${\n\t\t\t\t\ttheme.id === active ? 'active' : ''\n\t\t\t\t}`}\n\t\t\t\tkey={key}\n\t\t\t\tonClick={() => handleClick(theme.id)}\n\t\t\t/>\n\t\t);\n\t});\n\n\treturn <>{buttons}</>;\n};\n\nconst ChooseTheme: React.FC<ChooseThemeIProps> = ({onChangeTheme}) => {\n\tconst handleChangeTheme = (themeId: string) => {\n\t\tonChangeTheme && onChangeTheme(themeId);\n\t};\n\n\treturn (\n\t\t<div className='choose-theme'>\n\t\t\t<ButtonThemes onChangeTheme={theme => handleChangeTheme(theme)} />\n\t\t</div>\n\t);\n};\n\nexport default ChooseTheme;\n","import React, {useState} from 'react';\nimport Puzzle from './components/Puzzle';\nimport ChooseTheme from './components/ChooseTheme';\nimport {ThemeContext} from './theme/context';\nimport {getTheme} from './utils';\nimport {DEFAULT_THEME, DEFAULT_THEME_FROM_LOCALSTORAGE} from './constants';\n\nimport './style.css';\n\nconst App = () => {\n\tconst [themeId, setThemeId] = useState(\n\t\tDEFAULT_THEME_FROM_LOCALSTORAGE || DEFAULT_THEME\n\t);\n\n\tconst handleChangeTheme = (id: string) => setThemeId(id);\n\n\treturn (\n\t\t<ThemeContext.Provider value={getTheme(themeId)}>\n\t\t\t<div className='game'>\n\t\t\t\t<ChooseTheme\n\t\t\t\t\tonChangeTheme={theme => handleChangeTheme(theme)}\n\t\t\t\t/>\n\n\t\t\t\t<Puzzle />\n\t\t\t</div>\n\n\t\t\t<a\n\t\t\t\tclassName='made-by'\n\t\t\t\thref='https://github.com/interaminense/fifteen-puzzle-game'\n\t\t\t\ttarget='_blank'\n\t\t\t\trel='noopener noreferrer'\n\t\t\t\ttitle='Fork me on github'\n\t\t\t>\n\t\t\t\t@interaminense\n\t\t\t</a>\n\t\t</ThemeContext.Provider>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}